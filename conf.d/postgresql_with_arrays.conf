[DEFAULT]
method = GET
limit = 
scopes = common


[ENDPOINT:postgres_array_get_client]
storage = POSTGRES_ARRAY
rule = demo/postgres_array/client
limit = 2 per second
query = 
    SELECT c.* FROM demo.client c
    JOIN demo.apikey api ON api.client_id = c.client_id
    WHERE api.token = :token
        AND (CARDINALITY((:clientIds)::int[]) = 0 OR c.client_id = ANY((:clientIds)::int[]))
default.clientIds = []


[ENDPOINT:postgres_array_get_project]
storage = POSTGRES_ARRAY
rule = demo/postgres_array/project
method = GET
limit = 2 per second
query =
    SELECT p.* FROM demo.project p
    JOIN demo.apikey api ON api.client_id = p.client_id
    WHERE api.token = :token
        AND (CARDINALITY((:projectIds)::int[]) = 0 OR p.project_id = ANY((:projectIds)::int[]))
        AND (CARDINALITY((:clientIds)::int[]) = 0 OR p.client_id = ANY((:clientIds)::int[]))
        AND (NOT deleted OR :includeDeleted)
default.projectIds = []
default.clientIds = []
default.includeDeleted = False


[ENDPOINT:postgres_array_get_outcome]
storage = POSTGRES_ARRAY
rule = demo/postgres_array/outcome
method = GET
limit = 2 per second
scopes = extra
query =
    SELECT o.* FROM demo.outcome o
    JOIN demo.project p ON p.project_id = o.project_id
    JOIN demo.apikey api ON api.client_id = p.client_id
    WHERE (api.token = :token)
        AND (CARDINALITY((:projectIds)::int[]) = 0 OR p.project_id = ANY((:projectIds)::int[]))
        AND (sysmoment BETWEEN :startTime AND :endTime)
default.projectIds = []
